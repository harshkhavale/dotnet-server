// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SportsClubApi.Migrations
{
    [DbContext(typeof(SportsClubContext))]
    partial class SportsClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SportsClubApi.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("SportsClubApi.Models.Cities", b =>
                {
                    b.Property<decimal>("CityId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CountryId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StateId")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("SportsClubApi.Models.CorporateUser", b =>
                {
                    b.Property<int>("CorporateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CorporateId"));

                    b.Property<string>("ContactPersonDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonMobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("CorporateId");

                    b.ToTable("CorporateUsers");
                });

            modelBuilder.Entity("SportsClubApi.Models.Countries", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isocode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("SportsClubApi.Models.MembershipPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<int?>("CorporateId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CorporateShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("PlanId");

                    b.HasIndex("CorporateId");

                    b.ToTable("MembershipPlans");
                });

            modelBuilder.Entity("SportsClubApi.Models.MembershipPlanAttribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttributeId"));

                    b.Property<string>("Attributedetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attributename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("AttributeId");

                    b.HasIndex("PlanId");

                    b.ToTable("MembershipPlanAttribute");
                });

            modelBuilder.Entity("SportsClubApi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SportsClubApi.Models.States", b =>
                {
                    b.Property<decimal>("StateId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SportsClubApi.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("SportsClubApi.Models.SupplierActivitiesDetail", b =>
                {
                    b.Property<int>("SupplierActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierActivityId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("ActivitySchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierActivityId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierActivitiesDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AboutMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ActivationLevel")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreatedBy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataVerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DataVerified")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("EmailNotification")
                        .HasColumnType("bit");

                    b.Property<string>("EmailVerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmailVerified")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LastModifiedBy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("MobileNotification")
                        .HasColumnType("bit");

                    b.Property<string>("MobileVerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MobileVerified")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PasswordReset")
                        .HasColumnType("bit");

                    b.Property<string>("Postalcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("UserCategoryId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Mobile")
                        .IsUnique()
                        .HasFilter("[Mobile] IS NOT NULL");

                    b.HasIndex("UserCategoryId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("UserCategory");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserConsentDetail", b =>
                {
                    b.Property<int>("ConsentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsentId"));

                    b.Property<DateOnly?>("ConsentDate")
                        .HasColumnType("date");

                    b.Property<bool?>("ConsentStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ConsentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ConsentId");

                    b.HasIndex("UserId");

                    b.ToTable("UserConsentDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserMembershipPlanDetail", b =>
                {
                    b.Property<int>("UserPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPlanId"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<int?>("PlanId1")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserPlanId");

                    b.HasIndex("PlanId");

                    b.HasIndex("PlanId1");

                    b.HasIndex("UserId");

                    b.ToTable("UserMembershipPlanDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserNotificationHistory", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateOnly?>("NotificationDate")
                        .HasColumnType("date");

                    b.Property<string>("NotificationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotificationHistories");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserPaymentDetail", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPaymentDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserRolesDetail", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRolesDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.MembershipPlan", b =>
                {
                    b.HasOne("SportsClubApi.Models.CorporateUser", "Corporate")
                        .WithMany("MembershipPlans")
                        .HasForeignKey("CorporateId");

                    b.Navigation("Corporate");
                });

            modelBuilder.Entity("SportsClubApi.Models.MembershipPlanAttribute", b =>
                {
                    b.HasOne("SportsClubApi.Models.MembershipPlan", "Plan")
                        .WithMany("MembershipPlanAttributes")
                        .HasForeignKey("PlanId");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("SportsClubApi.Models.SupplierActivitiesDetail", b =>
                {
                    b.HasOne("SportsClubApi.Models.Activity", "Activity")
                        .WithMany("SupplierActivitiesDetails")
                        .HasForeignKey("ActivityId");

                    b.HasOne("SportsClubApi.Models.Supplier", "Supplier")
                        .WithMany("SupplierActivitiesDetails")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Activity");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SportsClubApi.Models.User", b =>
                {
                    b.HasOne("SportsClubApi.Models.UserCategory", "UserCategory")
                        .WithMany("Users")
                        .HasForeignKey("UserCategoryId");

                    b.Navigation("UserCategory");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserConsentDetail", b =>
                {
                    b.HasOne("SportsClubApi.Models.User", "User")
                        .WithMany("UserConsentDetails")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserMembershipPlanDetail", b =>
                {
                    b.HasOne("SportsClubApi.Models.MembershipPlan", "MembershipPlan")
                        .WithMany("UserMembershipPlanDetails")
                        .HasForeignKey("PlanId");

                    b.HasOne("SportsClubApi.Models.MembershipPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId1");

                    b.HasOne("SportsClubApi.Models.User", "User")
                        .WithMany("UserMembershipPlanDetails")
                        .HasForeignKey("UserId");

                    b.Navigation("MembershipPlan");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserNotificationHistory", b =>
                {
                    b.HasOne("SportsClubApi.Models.User", "User")
                        .WithMany("UserNotificationHistories")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserPaymentDetail", b =>
                {
                    b.HasOne("SportsClubApi.Models.MembershipPlan", "Plan")
                        .WithMany("UserPaymentDetails")
                        .HasForeignKey("PlanId");

                    b.HasOne("SportsClubApi.Models.User", "User")
                        .WithMany("UserPaymentDetails")
                        .HasForeignKey("UserId");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserRolesDetail", b =>
                {
                    b.HasOne("SportsClubApi.Models.Role", "Role")
                        .WithMany("UserRolesDetails")
                        .HasForeignKey("RoleId");

                    b.HasOne("SportsClubApi.Models.User", "User")
                        .WithMany("UserRolesDetails")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportsClubApi.Models.Activity", b =>
                {
                    b.Navigation("SupplierActivitiesDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.CorporateUser", b =>
                {
                    b.Navigation("MembershipPlans");
                });

            modelBuilder.Entity("SportsClubApi.Models.MembershipPlan", b =>
                {
                    b.Navigation("MembershipPlanAttributes");

                    b.Navigation("UserMembershipPlanDetails");

                    b.Navigation("UserPaymentDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.Role", b =>
                {
                    b.Navigation("UserRolesDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.Supplier", b =>
                {
                    b.Navigation("SupplierActivitiesDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.User", b =>
                {
                    b.Navigation("UserConsentDetails");

                    b.Navigation("UserMembershipPlanDetails");

                    b.Navigation("UserNotificationHistories");

                    b.Navigation("UserPaymentDetails");

                    b.Navigation("UserRolesDetails");
                });

            modelBuilder.Entity("SportsClubApi.Models.UserCategory", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
